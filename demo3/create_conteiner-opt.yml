---
- name: Create Conteiner-opimized OS and configure CloudNAT
  hosts: localhost
  connection: local
  gather_facts: no
  
  vars_files:
  - var
  tasks:
  - name: create a router
    command: gcloud compute routers create "{{ router_name }}" --network=default --region="{{ zone_network }}"
  - name: create CloudNAT
    command: gcloud compute routers nats create "{{ nat_name }}" \
               --router="{{ router_name }}" \
               --region="{{ zone_network }}" \
               --auto-allocate-nat-external-ips \
               --nat-all-subnet-ip-ranges \
               --enable-logging
  - name: Launch instances
    gce:
      instance_names: "{{ conteiner_optimized_name }}"  
      machine_type: "{{ machine_type }}"
      image: "{{ image }}"
      service_account_email: "{{ service_account_email }}"
      credentials_file: "{{ credentials_file }}"
      project_id: "{{ project_id }}"
      zone: "{{ zone }}"
      external_ip: none
      tags: 
      - webserver
      - http-server
      - https-server
    register: gce
  - debug:
      var: gce
  - name: Save hosts data
    add_host:
      hostname: "{{ item.private_ip }}"
      groupname: gce_instaces_java
    with_items: "{{ gce.instance_data }}"
  - debug:
      var: hostname
   
  - name: Wait for SSH for instances
    wait_for:
      delay: 1
      host: "{{ item.private_ip }}"
      port: 22
      state: started
      timeout: 120
    with_items: "{{ gce.instance_data }}"

  - name: wait for a couple of minutes
    pause:
      minutes: 1
      
  - name: get ip
    shell:
      cmd: "echo {{ item.private_ip }} >> ~/instance_ip"
    with_items: "{{ gce.instance_data }}"    

- name: Configure Hosts
  hosts: gce_instaces_java
  gather_facts: no
  roles:
  - docker-compose



